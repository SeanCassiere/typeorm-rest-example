{
	"openapi": "3.0.1",
	"info": {
		"title": "typeorm-rest-example",
		"description": "This is a example REST API using TypeORM.",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "apiteam@swagger.io"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		},
		"version": "1.0.0"
	},
	"externalDocs": {
		"description": "Find out more about Swagger",
		"url": "http://swagger.io"
	},
	"servers": [
		{
			"url": "https://localhost:4000/api"
		}
	],
	"tags": [
		{
			"name": "Users",
			"description": "All User related methods",
			"externalDocs": {
				"description": "Find out more",
				"url": "http://swagger.io"
			}
		}
	],
	"paths": {
		"/user": {
			"post": {
				"tags": ["Users"],
				"summary": "Create user",
				"description": "This can only be done by the logged in user.",
				"operationId": "createUser",
				"requestBody": {
					"description": "Created user object",
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"required": true
				},
				"responses": {
					"default": {
						"description": "successful operation",
						"content": {}
					}
				},
				"x-codegen-request-body-name": "body"
			}
		},
		"/user/profile": {
			"get": {
				"security": {
					"bearerAuth": []
				},
				"tags": ["Users"],
				"summary": "Creates list of users with given input array",
				"operationId": "createUsersWithArrayInput",
				"requestBody": {
					"description": "List of user object",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"x-codegen-request-body-name": "body"
			}
		},
		"/user/createWithList": {
			"post": {
				"tags": ["Users"],
				"summary": "Creates list of users with given input array",
				"operationId": "createUsersWithListInput",
				"requestBody": {
					"description": "List of user object",
					"content": {
						"*/*": {
							"schema": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"schema": {
								"type": "object",
								"items": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					}
				},
				"x-codegen-request-body-name": "body"
			}
		},
		"/user/login": {
			"get": {
				"tags": ["Users"],
				"summary": "Logs user into the system",
				"operationId": "loginUser",
				"parameters": [
					{
						"name": "username",
						"in": "query",
						"description": "The user name for login",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "password",
						"in": "query",
						"description": "The password for login in clear text",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"headers": {
							"X-Rate-Limit": {
								"description": "calls per hour allowed by the user",
								"schema": {
									"type": "integer",
									"format": "int32"
								}
							},
							"X-Expires-After": {
								"description": "date in UTC when token expires",
								"schema": {
									"type": "string",
									"format": "date-time"
								}
							}
						},
						"content": {
							"application/xml": {
								"schema": {
									"type": "string"
								}
							},
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"400": {
						"description": "Invalid username/password supplied",
						"content": {}
					}
				}
			}
		},
		"/user/logout": {
			"get": {
				"tags": ["Users"],
				"summary": "Logs out current logged in user session",
				"operationId": "logoutUser",
				"responses": {
					"default": {
						"description": "successful operation",
						"content": {}
					}
				}
			}
		},
		"/user/{username}": {
			"get": {
				"tags": ["Users"],
				"summary": "Get user by user name",
				"operationId": "getUserByName",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "The name that needs to be fetched. Use user1 for testing. ",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							},
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"400": {
						"description": "Invalid username supplied",
						"content": {}
					},
					"404": {
						"description": "User not found",
						"content": {}
					}
				}
			},
			"put": {
				"tags": ["Users"],
				"summary": "Updated user",
				"description": "This can only be done by the logged in user.",
				"operationId": "updateUser",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "name that need to be updated",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Updated user object",
					"content": {
						"*/*": {
							"schema": {
								"$ref": "#/components/schemas/User"
							}
						}
					},
					"required": true
				},
				"responses": {
					"400": {
						"description": "Invalid user supplied",
						"content": {}
					},
					"404": {
						"description": "User not found",
						"content": {}
					}
				},
				"x-codegen-request-body-name": "body"
			},
			"delete": {
				"tags": ["Users"],
				"summary": "Delete user",
				"description": "This can only be done by the logged in user.",
				"operationId": "deleteUser",
				"parameters": [
					{
						"name": "username",
						"in": "path",
						"description": "The name that needs to be deleted",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"400": {
						"description": "Invalid username supplied",
						"content": {}
					},
					"404": {
						"description": "User not found",
						"content": {}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"User": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"password": {
						"type": "string",
						"description": "Hashed user password"
					},
					"isActive": {
						"type": "boolean",
						"default": true
					},
					"isEmailConfirmed": {
						"type": "boolean",
						"default": false
					}
				},
				"xml": {
					"name": "User"
				}
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
