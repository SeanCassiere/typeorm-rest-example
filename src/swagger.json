{
	"openapi": "3.0.1",
	"info": {
		"title": "typeorm-rest-example",
		"description": "This is a example REST API using TypeORM.",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "apiteam@swagger.io"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		},
		"version": "1.0.0"
	},
	"externalDocs": {
		"description": "Find out more about Swagger",
		"url": "http://swagger.io"
	},
	"servers": [
		{
			"url": "http://localhost:4000"
		}
	],
	"tags": [
		{
			"name": "Users",
			"description": "All User related methods",
			"externalDocs": {
				"description": "Find out more",
				"url": "http://swagger.io"
			}
		},
		{
			"name": "Admin",
			"description": "All methods that are only accessible to isAdmin users",
			"externalDocs": {
				"description": "Find out more",
				"url": "http://swagger.io"
			}
		}
	],
	"paths": {
		"/api/users": {
			"post": {
				"tags": ["Users"],
				"summary": "Register a user",
				"description": "Register a user on the platform.",
				"operationId": "registerUser",
				"requestBody": {
					"description": "User object required for registering",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": true,
								"properties": {
									"firstName": {
										"type": "string"
									},
									"lastName": {
										"type": "string"
									},
									"email": {
										"type": "string",
										"format": "email"
									},
									"password": {
										"type": "string"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "successfully registered user",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"id": {
											"type": "integer"
										},
										"firstName": {
											"type": "string",
											"format": "string"
										},
										"lastName": {
											"type": "string",
											"format": "string"
										},
										"email": {
											"type": "string",
											"format": "email"
										},
										"isAdmin": {
											"type": "boolean",
											"default": false
										},
										"isEmailConfirmed": {
											"type": "boolean",
											"default": false
										}
									}
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FieldValidationError"
								}
							}
						}
					}
				},
				"x-codegen-request-body-name": "body"
			},
			"get": {
				"tags": ["Users", "Admin"],
				"summary": "Admin Get all users",
				"description": "This can only be done by an isAdmin user.",
				"operationId": "getAllUsers",
				"parameters": [
					{
						"name": "limit",
						"in": "query",
						"description": "Limit number of items in the query",
						"schema": {
							"type": "integer"
						}
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Offset number of items in the query",
						"schema": {
							"type": "integer"
						}
					}
				],
				"security": [{ "bearerAuth": [] }],
				"responses": {
					"200": {
						"description": "All users in the system",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/UserFromDB"
									}
								}
							}
						}
					}
				},
				"x-codegen-request-body-name": "body"
			}
		},
		"/api/users/login": {
			"post": {
				"tags": ["Users"],
				"summary": "Logs user into the system",
				"operationId": "loginUser",
				"requestBody": {
					"description": "Login a user",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": true,
								"properties": {
									"email": {
										"type": "string",
										"format": "email"
									},
									"password": {
										"type": "string"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserForApplicationWithToken"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FieldValidationError"
								}
							}
						}
					},
					"401": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					}
				}
			}
		},
		"/api/users/profile": {
			"get": {
				"tags": ["Users"],
				"summary": "Fetch the profile of the currently logged-in user",
				"operationId": "fetchCurrentUserProfile",
				"security": [{ "bearerAuth": [] }],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/UserForApplication"
								}
							}
						}
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					}
				},
				"x-codegen-request-body-name": "body"
			},
			"put": {
				"tags": ["Users"],
				"summary": "Update the profile of the currently logged-in user",
				"operationId": "updateCurrentUserProfile",
				"security": [{ "bearerAuth": [] }],
				"requestBody": {
					"description": "User profile data to be updated",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": true,
								"properties": {
									"firstName": {
										"type": "string"
									},
									"lastName": {
										"type": "string"
									},
									"email": {
										"type": "string",
										"format": "email"
									},
									"password": {
										"type": "string"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserForApplicationWithToken"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FieldValidationError"
								}
							}
						}
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					},
					"500": {
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					}
				},
				"x-codegen-request-body-name": "body"
			}
		},
		"/api/users/confirmUser": {
			"post": {
				"tags": ["Users"],
				"summary": "Confirms the user email into the system",
				"operationId": "confirmUser",
				"requestBody": {
					"description": "Confirm user email",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": true,
								"properties": {
									"token": {
										"type": "string"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserForApplication"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FieldValidationError"
								}
							}
						}
					},
					"401": {
						"description": "Invalid token or user not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					}
				}
			}
		},
		"/api/users/resendConfirmationEmail": {
			"post": {
				"tags": ["Users"],
				"summary": "Request new account confirmation email",
				"operationId": "resendConfirmationEmail",
				"requestBody": {
					"description": "Pass email to check and send email from db. Will always return true for security purposes",
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": true,
								"properties": {
									"email": {
										"type": "string",
										"format": "email"
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FieldValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/users/sendForgotPasswordEmail": {
			"post": {
				"tags": ["Users"],
				"summary": "Send reset password link to email",
				"operationId": "sendForgotPasswordEmail",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": true,
								"properties": {
									"email": {
										"type": "string",
										"format": "email"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FieldValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/users/resetPassword": {
			"post": {
				"tags": ["Users"],
				"summary": "Reset the user password with the token from the email",
				"operationId": "resetPasswordWithToken",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"required": true,
								"properties": {
									"token": {
										"type": "string"
									},
									"password": {
										"type": "string"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/FieldValidationError"
								}
							}
						}
					}
				}
			}
		},
		"/api/users/{id}": {
			"get": {
				"tags": ["Users", "Admin"],
				"summary": "Admin Get user by ID",
				"operationId": "getUserById",
				"security": [{ "bearerAuth": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id of the user to be fetched. Use 1 for testing.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserFromDB"
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": ["Users", "Admin"],
				"summary": "Admin Update user by Id",
				"description": "This can only be done by the logged in user.",
				"operationId": "updateUserById",
				"security": [{ "bearerAuth": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id of the user to be fetched. Use 1 for testing.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "Updated user object",
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"firstName": {
										"type": "string"
									},
									"lastName": {
										"type": "string"
									},
									"email": {
										"type": "string",
										"format": "email"
									},
									"isEmailConfirmed": {
										"type": "boolean"
									},
									"isAdmin": {
										"type": "boolean",
										"default": false
									},
									"isActive": {
										"type": "boolean",
										"default": true
									}
								}
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserFromDB"
								}
							}
						}
					},
					"400": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					},
					"404": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					}
				},
				"x-codegen-request-body-name": "body"
			},
			"delete": {
				"tags": ["Users", "Admin"],
				"summary": "Admin Delete a user by Id",
				"operationId": "deleteUserById",
				"security": [{ "bearerAuth": [] }],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"description": "Id of the user to be deleted",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User deleted",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									}
								}
							}
						}
					},
					"404": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/StandardError"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"FieldValidationError": {
				"type": "object",
				"properties": {
					"errors": {
						"type": "object",
						"properties": {
							"body": {
								"type": "array",
								"nullable": true,
								"format": "possibleVoid",
								"items": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										},
										"propertyPath": {
											"type": "string"
										}
									}
								}
							}
						}
					}
				}
			},
			"StandardError": {
				"type": "object",
				"properties": {
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string",
						"nullable": true
					}
				}
			},
			"UserFromDB": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"password": {
						"type": "string"
					},
					"isEmailConfirmed": {
						"type": "boolean"
					},
					"isAdmin": {
						"type": "boolean"
					},
					"isActive": {
						"type": "boolean"
					}
				}
			},
			"UserForApplication": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"isEmailConfirmed": {
						"type": "boolean"
					},
					"isAdmin": {
						"type": "boolean"
					}
				}
			},
			"UserForApplicationWithToken": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer"
					},
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"email": {
						"type": "string",
						"format": "email"
					},
					"isEmailConfirmed": {
						"type": "boolean"
					},
					"isAdmin": {
						"type": "boolean"
					},
					"token": {
						"type": "string"
					}
				}
			}
		},
		"securitySchemes": {
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		}
	}
}
